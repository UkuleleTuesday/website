name: Export Static Site

on:
  # Allow manual triggering
  workflow_dispatch:
  
  # Run on schedule (daily at 2 AM UTC)
  schedule:
    - cron: '0 2 * * *'
  
  # Run on pushes to main branch (for testing)
  push:
    branches: [ main ]

  # Run on pull requests
  pull_request:

jobs:
  export-and-deploy:
    runs-on: ubuntu-latest
    
    # Use a concurrency group to prevent multiple exports running simultaneously
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
    
    - name: Run static export
      timeout-minutes: 10
      env:
        WP_USERNAME: ${{ secrets.WP_USERNAME }}
        WP_PASSWORD: ${{ secrets.WP_PASSWORD }}
      run: uv run export.py download -o ./static-export --num-retries 5
    
    - name: Fix paths in static site
      run: |
        cd ./static-export
        grep -rl --include='*.html' 'action=dynamic_css#038;ver=' . \
          | xargs sed -i -E \
              's@/wp-admin/admin-ajax\.php\?action=dynamic_css#038;ver=[^"]*@/wp-admin/admin-ajax.css@g'
        echo "✓ Fixed paths in static site"
    
    - name: Run netlify_formify
      run: uv run netlify_formify.py ./static-export
    
    - name: Copy extra assets
      if: always() # Ensure this runs even if previous step finds no forms
      run: |
        if [ -d "./extra-assets" ]; then
          cp -r ./extra-assets/* ./static-export/
          echo "✓ Copied extra assets to static-export"
        else
          echo "No extra-assets directory found, skipping"
        fi
    
    - name: Set Netlify deployment arguments
      id: netlify_args
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          PR_TITLE="${{ github.event.pull_request.title }}"
          # Escape quotes in PR title
          PR_TITLE_ESCAPED=${PR_TITLE//\"/\\\"}
          DEPLOY_MESSAGE="Deploy preview for PR #${{ github.event.number }} - ${PR_TITLE_ESCAPED}"
          echo "deploy_args=deploy --dir=./static-export --no-build --message \"${DEPLOY_MESSAGE}\"" >> "$GITHUB_OUTPUT"
        else
          COMMIT_MSG=$(git log -1 --pretty=%B)
          # Escape quotes in commit message
          COMMIT_MSG_ESCAPED=${COMMIT_MSG//\"/\\\"}
          DEPLOY_MESSAGE="Production deploy: ${COMMIT_MSG_ESCAPED}"
          echo "deploy_args=deploy --dir=./static-export --no-build --prod-if-unlocked --message \"${DEPLOY_MESSAGE}\"" >> "$GITHUB_OUTPUT"
        fi

    - name: Deploy to Netlify
      id: netlify_deploy
      uses: netlify/actions/cli@master
      with:
        args: ${{ steps.netlify_args.outputs.deploy_args }}
      env:
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}

    - name: Check Netlify deployment for errors
      if: contains(steps.netlify_deploy.outputs.NETLIFY_OUTPUT, 'Error:')
      run: |
        echo "Netlify deployment failed!"
        echo "${{ steps.netlify_deploy.outputs.NETLIFY_OUTPUT }}"
        exit 1
